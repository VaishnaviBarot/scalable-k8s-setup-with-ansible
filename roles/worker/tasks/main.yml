---
    - name: Disable swap
      ansible.builtin.command:
        cmd: "swapoff -a"
      become_user: root
    
    - name: Reset zram if it exists
      ansible.builtin.command:
        cmd: "zramctl --reset /dev/zram0"
      ignore_errors: yes  # Ignore errors if zram0 does not exist

    - name: Ensure /etc/yum.repos.d directory exists
      ansible.builtin.file:
        path: /etc/yum.repos.d
        state: directory
        mode: '0755'

    - name: Touch /etc/yum.repos.d/kubernetes.repo file
      ansible.builtin.file:
        path: /etc/yum.repos.d/kubernetes.repo
        state: touch
        mode: '0644'

    - name: Add kubernetes repository using blockinfile
      ansible.builtin.blockinfile:
        path: /etc/yum.repos.d/kubernetes.repo
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        block: |
          [kubernetes]
          baseurl = https://pkgs.k8s.io/core:/stable:/v1.26/rpm/
          exclude = kubelet kubeadm cri-tools kubernetes-cni
          gpgkey = https://pkgs.k8s.io/core:/stable:/v1.26/rpm/repodata/repomd.xml.key
          name = kubernetes yum repo
          repo_gpgcheck = 1
          
    - name: Install required packages
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      args:
        disable_excludes: kubernetes
      loop:
        - docker
        - kubelet
        - kubeadm
        - kubectl
      
      vars:
        ansible_python_interpreter: /usr/bin/python2

    - name: Enable and start services
      systemd:
        name: "{{ item }}"
        enabled: true
        state: restarted
      loop:
        - docker
        - kubelet
        
          
    - name: Check if kubelet.conf exists
      ansible.builtin.stat:
        path: /etc/kubernetes/kubelet.conf
      register: kubelet_conf_stat

    - name: Run join command if kubelet.conf doesn't exist
      ansible.builtin.shell:
        cmd: "sudo sh /home/ec2-user/join-command.sh"
      when: not kubelet_conf_stat.stat.exists
