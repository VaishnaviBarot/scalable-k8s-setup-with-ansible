---
    - name: Ensure /etc/yum.repos.d directory exists
      ansible.builtin.file:
        path: /etc/yum.repos.d
        state: directory
        mode: '0755'

    - name: Touch /etc/yum.repos.d/kubernetes.repo file
      ansible.builtin.file:
        path: /etc/yum.repos.d/kubernetes.repo
        state: touch
        mode: '0644'

    - name: Add kubernetes repository using blockinfile
      ansible.builtin.blockinfile:
        path: /etc/yum.repos.d/kubernetes.repo
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        block: |
          [kubernetes]
          baseurl = https://pkgs.k8s.io/core:/stable:/v1.26/rpm/
          gpgkey = https://pkgs.k8s.io/core:/stable:/v1.26/rpm/repodata/repomd.xml.key
          name = kubernetes yum repo
          repo_gpgcheck = 1

    - name: Install kubectl
      ansible.builtin.dnf:
        name: kubectl
        state: present
      vars:
        ansible_python_interpreter: /usr/bin/python3
        
    - name: Create ~/.kube directory
      ansible.builtin.file:
        path: /home/ec2-user/.kube
        state: directory
        mode: '0755'
        
        
    - name: Copy kubeconfig file from control plane to local machine
      ansible.builtin.fetch:
        src: "/etc/kubernetes/admin.conf"
        dest: "~/"
        flat: yes
        validate_checksum: yes
        fail_on_missing: yes
      delegate_to: "{{ hostvars[groups['tag_controlplane'][0]].private_ip_address | default(inventory_hostname) }}" 
      vars:
        ansible_ssh_private_key_file: "/home/ec2-user/.ssh/k8s_key"
        public_ip_address: "{{ hostvars[inventory_hostname].public_ip_address | default(null) }}"

    - name: Copy the file (kubeconfig)
      ansible.builtin.copy:
        src: "/home/ec2-user/admin.conf"
        dest: "/home/ec2-user/.kube/"
      become: true
      delegate_to: "{{ public_ip_address }}" 
      vars:
        ansible_ssh_private_key_file: "/home/ec2-user/.ssh/bastion_host_key"
        public_ip_address: "{{ hostvars[inventory_hostname].public_ip_address | default(null) }}"
        
    - name: Copy join command to local file
      ansible.builtin.fetch:
        src: "join-command.sh"
        dest: "~/"
        flat: yes
        validate_checksum: yes
        fail_on_missing: yes
      delegate_to: "{{ hostvars[groups['tag_controlplane'][0]].private_ip_address | default(inventory_hostname) }}" 
      vars:
        ansible_ssh_private_key_file: "/home/ec2-user/.ssh/k8s_key"
        public_ip_address: "{{ hostvars[inventory_hostname].public_ip_address | default(null) }}"

    - name: Copy the file(joincommand)
      ansible.builtin.copy:
        src: "/home/ec2-user/join-command.sh"
        dest: "/home/ec2-user/.kube/"
      become: true
      delegate_to: "{{ public_ip_address }}" 
      vars:
        ansible_ssh_private_key_file: "/home/ec2-user/.ssh/bastion_host_key"
        public_ip_address: "{{ hostvars[inventory_hostname].public_ip_address | default(null) }}"
        

    - name: Copy kubeconfig file to worker
      ansible.builtin.copy:
        src: "/home/ec2-user/join-command.sh"
        dest: "/home/ec2-user/"
      become: true
      delegate_to: "{{ hostvars[groups['tag_worker'][0]].private_ip_address | default(inventory_hostname) }}" 
      vars:
        ansible_ssh_private_key_file: "/home/ec2-user/.ssh/k8s_key"
        public_ip_address: "{{ hostvars[inventory_hostname].public_ip_address | default(null) }}"
